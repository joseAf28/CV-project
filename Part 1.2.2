## Part 1.2

------

### Frame-to-Frame Motion Compensation

The camera is moving, so each frame will have a different perspective of the scene. Goal: Compensate the camera movement so that all frames are aligned in the reference of the first frame.

#### Procedure:

- Estimate motion between frames $t$ and $t+1$:	

$$
\bold{x}_{t+1} = R . \bold{x}_t + t
$$

- Accumulate transformations for each frame relative to each frame:
  $$
  \bold{T}_{r \to t+1} = \bold{T}_{r\to t} . \bold{T}_{t\to t+1}
  $$

- 

- Warp all frames into coordinat system of the reference frame 

$$
\bold{x}_r = \bold{T}_{r\to t} . \bold{x}_t
$$

This also involves doing **Feature Detection & Matching** (to compute the inter-frame motion) .

#### Workflow:

- Detect and match static keypoints from Frame $t$ to Frame $t+1$
- Eliminate Outliers (?)
- Compute the **Essential** matrix and decompose it to obtain the relative pose $R$ and $t$ between frames
- Using the frame-to-frame transformations, we can obtain the camera's view in terms of the reference frame  



### Relative Pose Between Cameras:

It is assumed that the relative pose between the two cameras at any time $t$ is a rigid transformation $[\bold{R},\bold{t}]$, which allows us to:
$$
\bold{x}_2 = \bold{R} . \bold{x}_1 + \bold{t}
$$

### Use the Homography:

Use the homography to compute the points in Google Maps:
$$
\bold{x}_{Google} = \bold{H} . \bold{x}_{map}
$$
